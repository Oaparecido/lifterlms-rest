get:
  summary: List API keys
  description: Retrieve a list of API keys.
  tags:
    - API Keys
  parameters:
    - $ref: '#/components/parameters/Context'
    - $ref: '#/components/parameters/Page'
    - $ref: '#/components/parameters/PerPage'
    - $ref: '#/components/parameters/Order'
    - name: orderby
      description: Specify the sort field for a collection of results.
      in: query
      required: false
      schema:
        type: string
        enum:
          - id
          - description
          - last_access
        default: id
    - $ref: '#/components/parameters/Include'
    - $ref: '#/components/parameters/Exclude'
    - name: user
      description: Include only keys for the specified user(s). Accepts a single id or a comma separated list of ids.
      in: query
      required: false
      schema:
        type: integer
        example: [ 123, 456 ]
    - name: user_not_in
      description: Exclude keys for the specified user(s). Accepts a single id or a comma separated list of ids.
      in: query
      required: false
      schema:
        type: integer
        example: [ 123, 456 ]
    - name: permissions
      description: Include only API keys matching a specific permission.
      in: query
      required: false
      schema:
        type: string
        enum:
          - read
          - write
          - read_write
  responses:
    200:
      description: Successfully returned a list of API keys.
      headers:
        Link:
          description: Pagination links for the collection.
          schema:
            type: string
            example: >-
              </wp-json/llms/v1/api-keys?page=1>; rel="first",
              </wp-json/llms/v1/api-keys?page=2>; rel="prev",
              </wp-json/llms/v1/api-keys?page=4>; rel="next",
              </wp-json/llms/v1/api-keys?page=5>; rel="last"
        X-WP-Total:
          $ref: '#/components/headers/PaginationTotalResults'
        X-WP-TotalPages:
          $ref: '#/components/headers/PaginationTotalPages'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/APIKey'
    400:
      $ref: '#/components/responses/Error400'
    401:
      $ref: '#/components/responses/Error401'
    403:
      $ref: '#/components/responses/Error403'

post:
  summary: Create an API key
  description: Create a new API key.
  tags:
    - API Keys
  requestBody:
    required: true
    content:
      application/json:
        schema:
          allOf:
            - $ref: '#/components/schemas/APIKey'
            - required:
              - user_id
              - description
              - permissions
  responses:
    201:
      description: Successfully created the student.
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  consumer_key:
                    description: The Consumer Key. Only returned once with the initial creation request.
                    type: string
                    example: ck_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
                  consumer_secret:
                    description: The Consumer Secret. Only returned once with the initial creation request.
                    type: string
                    example: cs_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
              - $ref: '#/components/schemas/APIKey'
    400:
      $ref: '#/components/responses/Error400'
    401:
      $ref: '#/components/responses/Error401'
    403:
      $ref: '#/components/responses/Error403'
