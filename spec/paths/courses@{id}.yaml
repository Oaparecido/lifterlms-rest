parameters:
  - name: id
    description: The course ID.
    example: 123
    in: path
    required: true
    schema:
      type: integer

get:
  summary: Retrieve a course
  description: Retrieve the details of an existing course.
  tags:
    - Courses
  responses:
    200:
      description: Successfully retrieved the course.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Course'
    400:
      $ref: '#/components/responses/Error400'
    401:
      $ref: '#/components/responses/Error401'
    403:
      $ref: '#/components/responses/Error403'
    404:
      $ref: '#/components/responses/Error404'

post:
  operationId: updateCourse
  summary: Update a course
  description: >-
    Update the specified course by setting the values of the parameters passed.
    Any parameters not provided will be left unchanged.
  tags:
    - Courses
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/Course'
  responses:
    200:
      description: Successfully updated the student.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Course'
    400:
      $ref: '#/components/responses/Error400'
    401:
      $ref: '#/components/responses/Error401'
    403:
      $ref: '#/components/responses/Error403'
    404:
      $ref: '#/components/responses/Error404'

delete:
  summary: Delete a course
  description: Delete an existing course.
  tags:
    - Courses
  responses:
    204:
      description: Successfully deleted the student.
    400:
      $ref: '#/components/responses/Error400'
    401:
      $ref: '#/components/responses/Error401'
    403:
      $ref: '#/components/responses/Error403'
    404:
      $ref: '#/components/responses/Error404'
