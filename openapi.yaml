openapi: 3.0.0
info:
  version: 1.0.0
  title: LifterLMS REST API
  description: |-
    # Introduction
    LifterLMS (LLMS) is fully integrated with the [WordPress REST API](https://developer.wordpress.org/rest-api/). This allows LifterLMS data to be created, read, updated, and deleted using requests in JSON format and using WordPress REST API Authentication methods and standard HTTP verbs which are understood by most HTTP clients.
    ## Requirements
    To use the latest version of the REST API you must be using the following:

      + LifterLMS [@version]+.
      + WordPress 5.2+.
      + Pretty permalinks in `Settings -> Permalinks` so that the custom endpoints are supported. **Default permalinks will not work.**
      + An SSL certificate.

    ## Errors
    asrtasrtarst
    # Authentication
    Requests to most API resources require authentication. Authentication can be preformed by providing API Credentials by using as the username and password via [HTTP Basic Authentication](http://en.wikipedia.org/wiki/Basic_access_authentication) or through request headers.

    Requests to the REST API may only be made over [HTTPS](http://en.wikipedia.org/wiki/HTTP_Secure). Requests made over HTTP will fail.
    ## Basic Authentication
    The preferred authentication method is HTTP Basic Authentication.
    To use HTTP Basic Auth, provide the Consumer Key as the username and the Consumer Secret as the password.
    ```
      curl https://example.tld/wp-json/llms/v1/courses \
        -u ck_d7W85twOWT0poKzDSAQzI7:sk_8bsMmRfjW1HgEFw5ad7BIF
    ```
    ## Header Authentication
    Alternatively, requests may be authenticated by providing the Consumer Key and Consumer secret as the request headers `X-CONSUMER-KEY` and `X-CONSUMER-SECRET`.
    ```
      curl https://example.tld/wp-json/llms/v1/courses \
        -H X-CONSUMER-KEY: ck_d7W85twOWT0poKzDSAQzI7 \
        -H X-CONSUMER-SECRET: sk_8bsMmRfjW1HgEFw5ad7BIF
    ```
  x-logo:
    altText: LifterLMS
    url: 'https://gocodebox.github.io/lifterlms-brand/assets/img/png/logo/lifterlms-logo.png'
    href: 'https://lifterlms.com/'
servers:
  - url: /wp-json/llms/v1
security:
  - Basic-Authentication: []
tags:
  - name: Access Plans
    description: |
      Access plans allow you to define how LMS content is purchased and accessed by your students.

      The access plans API allows you to create, view, update, and delete courses.
  - name: Courses
    description: |
      The courses API allows you to create, view, update, and delete courses.
  - name: Enrollments
    description: |
      Enrollments are used to track a student's access to content on your website.

      The enrollments API allows you to create, view, update, and delete student enrollments.
  - name: Memberships
    description: |
      The memberships API allows you to create, view, update, and delete memberships.
  - name: Instructors
    description: |
      Instructors are members of your site who have the ability to create and manage LMS content and students. Instructors may be Adminstators, LMS Managers, Instructors, and Instructors Assistants.

      The instructors API allows you to create, view, update, and delete student accounts.
  - name: Sections
    description: |
      The sections API allows you to create, view, update, and delete sections.

      Sections are used within courses to organize content (lessons) into groups.
  - name: Students
    description: |
      Students are members of your site who are (or were) enrolled in your courses and memberships. Students can be any WordPress user account on your site (not exclusively the "student" role).

      The students API allows you to create, view, update, and delete student accounts  as well as view information about the student's LMS content.
x-tagGroups:
  - name: Courses
    tags:
      - Courses
      - Sections
      - Lessons
  - name: Enrollments
    tags:
      - Enrollments
  - name: Memberships
    tags:
      - Memberships
  - name: E-Commerce
    tags:
      - Access Plans
  - name: Users
    tags:
      - Students
      - Instructors
paths:
  /access-plans:
    get:
      summary: List access plans
      description: Retrieve a list of access plans.
      tags:
        - Access Plans
      parameters:
        - $ref: '#/components/parameters/Context'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Order'
        - name: orderby
          description: Specify the sort field for a collection of results.
          in: query
          required: false
          schema:
            type: string
            enum:
              - id
              - title
              - date_created
              - date_updated
              - menu_order
            default: id
        - $ref: '#/components/parameters/Include'
        - $ref: '#/components/parameters/Exclude'
        - name: product_id
          description: Retrieve access plans for a specific list of one or more posts. Accepts a course/membership id or comma separted list of course/membership ids.
          in: query
          schema:
            type: string
            example: '123,456'
      responses:
        '200':
          description: Successfully returned a list of access plans.
          headers:
            Link:
              description: Pagination links for the collection.
              schema:
                type: string
                example: '</wp-json/llms/v1/access-plans?page=1>; rel="first", </wp-json/llms/v1/access-plans?page=2>; rel="prev", </wp-json/llms/v1/access-plans?page=4>; rel="next", </wp-json/llms/v1/access-plans?page=5>; rel="last"'
            X-WP-Total:
              $ref: '#/components/headers/PaginationTotalResults'
            X-WP-TotalPages:
              $ref: '#/components/headers/PaginationTotalPages'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccessPlanResponse'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
      x-code-samples:
        - lang: cURL
          source: |
            curl https://example.tld/wp-json/llms/v1/access-plans \
              -G
    post:
      summary: Create an access plan
      description: Create a new access plan object.
      tags:
        - Access Plans
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AccessPlanRequest'
                - required:
                    - title
                    - price
                    - product_id
      responses:
        '201':
          description: Successfully created the student.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessPlanResponse'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
      x-code-samples:
        - lang: cURL
          source: |
            curl https://example.tld/wp-json/llms/v1/access-plans \
              -d price=199.97 \
              -d title="Lifetime Access"
              -d product_id=123
  '/access-plans/{id}':
    parameters:
      - name: id
        in: path
        description: Unique AccessPlan Identifier. The WordPress Post `ID`.
        required: true
        schema:
          $ref: '#/components/schemas/ResourceId'
    get:
      summary: Retrieve an access plan
      description: Retrieve the details of an existing access plan.
      tags:
        - Access Plans
      parameters:
        - $ref: '#/components/parameters/Context'
        - $ref: '#/components/parameters/PostPassword'
      responses:
        '200':
          description: Successfully retrieved the access plan.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessPlanResponse'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
        '404':
          $ref: '#/components/responses/Error404'
      x-code-samples:
        - lang: cURL
          source: |
            curl https://example.tld/wp-json/llms/v1/access-plans/1234 \
              -G
    post:
      summary: Update an access plan
      description: Update the specified access plan by setting the values of the parameters passed. Any parameters not provided will be left unchanged.
      tags:
        - Access Plans
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessPlanRequest'
      responses:
        '200':
          description: Successfully updated the access plan.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessPlanResponse'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
        '404':
          $ref: '#/components/responses/Error404'
      x-code-samples:
        - lang: cURL
          source: |
            curl https://example.tld/wp-json/llms/v1/access-plans/1234 \
              -d price=25.00
    delete:
      summary: Delete an access plan
      description: Delete an existing access plan.
      tags:
        - Access Plans
      responses:
        '204':
          description: Successfully deleted the access plan.
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
        '404':
          $ref: '#/components/responses/Error404'
      x-code-samples:
        - lang: cURL
          source: |
            curl https://example.tld/wp-json/llms/v1/access-plans/1234 \
              -X DELETE
  /courses:
    get:
      summary: List courses
      description: Retrieve a list of courses.
      tags:
        - Courses
      parameters:
        - $ref: '#/components/parameters/Context'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Order'
        - name: orderby
          description: Specify the sort field for a collection of results.
          in: query
          required: false
          schema:
            type: string
            enum:
              - id
              - title
              - date_created
              - date_updated
              - menu_order
            default: id
        - $ref: '#/components/parameters/Include'
        - $ref: '#/components/parameters/Exclude'
      responses:
        '200':
          description: Successfully returned a list of courses.
          headers:
            Link:
              description: Pagination links for the collection.
              schema:
                type: string
                example: '</wp-json/llms/v1/courses?page=1>; rel="first", </wp-json/llms/v1/courses?page=2>; rel="prev", </wp-json/llms/v1/courses?page=4>; rel="next", </wp-json/llms/v1/courses?page=5>; rel="last"'
            X-WP-Total:
              $ref: '#/components/headers/PaginationTotalResults'
            X-WP-TotalPages:
              $ref: '#/components/headers/PaginationTotalPages'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CourseResponse'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
    post:
      summary: Create a course
      description: Create a new course object.
      tags:
        - Courses
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CourseRequest'
                - required:
                    - title
                    - content
      responses:
        '201':
          description: Successfully created the course.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseResponse'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
  '/courses/{id}':
    parameters:
      - name: id
        in: path
        description: Unique Course Identifier. The WordPress Post `ID`.
        required: true
        schema:
          $ref: '#/components/schemas/ResourceId'
    get:
      summary: Retrieve a course
      description: Retrieve the details of an existing course.
      tags:
        - Courses
      parameters:
        - $ref: '#/components/parameters/Context'
        - $ref: '#/components/parameters/PostPassword'
      responses:
        '200':
          description: Successfully retrieved the course.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseResponse'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
        '404':
          $ref: '#/components/responses/Error404'
    post:
      summary: Update a course
      description: Update the specified course by setting the values of the parameters passed. Any parameters not provided will be left unchanged.
      tags:
        - Courses
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
      responses:
        '200':
          description: Successfully updated the course.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseResponse'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
        '404':
          $ref: '#/components/responses/Error404'
    delete:
      summary: Delete a course
      description: Delete an existing course.
      tags:
        - Courses
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                force:
                  description: Bypass the trash and force course deletion.
                  type: boolean
                  default: false
      responses:
        '204':
          description: Successfully deleted the course.
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
        '404':
          $ref: '#/components/responses/Error404'
  '/courses/{id}/content':
    parameters:
      - name: id
        in: path
        description: Unique course Identifier. The WordPress Post `ID`.
        required: true
        schema:
          $ref: '#/components/schemas/ResourceId'
    get:
      summary: List course content
      description: Retrieve a collection of an existing course's content.
      tags:
        - Courses
      parameters:
        - $ref: '#/components/parameters/Context'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Order'
        - name: orderby
          description: Specify the sort field for a collection of results.
          in: query
          required: false
          schema:
            type: string
            enum:
              - order
              - id
              - title
            default: order
        - $ref: '#/components/parameters/Include'
        - $ref: '#/components/parameters/PostPassword'
        - name: parent
          description: Filter results to those belonging to the specified parent.
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            example: 987
      responses:
        '200':
          description: Successfully retrieved the course outline.
          headers:
            Link:
              description: Pagination links for the collection.
              schema:
                type: string
                example: '</wp-json/llms/v1/courses/1234/content/?page=1>; rel="first", </wp-json/llms/v1/courses/1234/content/?page=2>; rel="prev", </wp-json/llms/v1/courses/1234/content/?page=4>; rel="next", </wp-json/llms/v1/courses/1234/content/?page=5>; rel="last"'
            X-WP-Total:
              $ref: '#/components/headers/PaginationTotalResults'
            X-WP-TotalPages:
              $ref: '#/components/headers/PaginationTotalPages'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SectionResponse'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
        '404':
          $ref: '#/components/responses/Error404'
  /enrollments:
    get:
      summary: List enrollments
      description: Retrieve a list of enrollments.
      tags:
        - Enrollments
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Order'
        - name: orderby
          description: Specify the sort field for a collection of results.
          in: query
          schema:
            type: string
            enum:
              - id
              - date_created
              - date_updated
              - post_id
              - student_id
            default: id
        - $ref: '#/components/parameters/Include'
        - $ref: '#/components/parameters/Exclude'
        - name: student
          description: Retrieve enrollments for a specific list of one or more students. Accepts a student id or comma separated list of student ids.
          in: query
          schema:
            type: string
            example: '123,456'
        - name: student_exclude
          description: Exclude enrollments for a specific list of one or more students. Accepts a student id or comma separated list of student ids.
          in: query
          schema:
            type: string
            example: '789,324'
        - name: post
          description: Retrieve enrollments for a specific list of one or more posts. Accepts a student id or comma separated list of student ids.
          in: query
          schema:
            type: string
            example: '123,456'
        - name: post_exclude
          description: Exclude enrollments for a specific list of one or more posts. Accepts a student id or comma separated list of student ids.
          in: query
          schema:
            type: string
            example: '789,324'
        - $ref: '#/components/parameters/PostType'
        - name: status
          description: Include enrollments for the specified status or list of statuses. Accepts a status or comma separated list of statuses.
          in: query
          schema:
            type: string
            enum:
              - enrolled
              - expired
              - cancelled
              - none
              - any
            default: any
      responses:
        '200':
          description: Successfully returned a list of enrollments.
          headers:
            Link:
              description: Pagination links for the collection.
              schema:
                type: string
                example: '</wp-json/llms/v1/enrollments?page=1>; rel="first", </wp-json/llms/v1/enrollments?page=2>; rel="prev", </wp-json/llms/v1/enrollments?page=4>; rel="next", </wp-json/llms/v1/enrollments?page=5>; rel="last"'
            X-WP-Total:
              $ref: '#/components/headers/PaginationTotalResults'
            X-WP-TotalPages:
              $ref: '#/components/headers/PaginationTotalPages'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Enrollment'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
    post:
      summary: Create an enrollment
      description: Create a new course object.
      tags:
        - Enrollments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Enrollment'
      responses:
        '201':
          description: Successfully created the enrollment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enrollment'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
  '/enrollments/{id}':
    parameters:
      - name: id
        description: Unique enrollment Identifier.
        example: 987
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceId'
    get:
      summary: Retrieve a enrollment
      description: Retrieve the details of an existing enrollment.
      tags:
        - Enrollments
      responses:
        '200':
          description: Successfully retrieved the enrollment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enrollment'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
        '404':
          $ref: '#/components/responses/Error404'
    post:
      summary: Update an enrollment
      description: Update the specified enrollment by setting the values of the parameters passed. Any parameters not provided will be left unchanged.
      tags:
        - Enrollments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Enrollment'
      responses:
        '200':
          description: Successfully updated the student.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enrollment'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
        '404':
          $ref: '#/components/responses/Error404'
    delete:
      summary: Delete an enrollment
      description: Delete an existing enrollment.
      tags:
        - Enrollments
      responses:
        '204':
          description: Successfully deleted the student.
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
        '404':
          $ref: '#/components/responses/Error404'
  /instructors:
    get:
      summary: List instructors
      description: Retrieves a list of all instructors.
      tags:
        - Instructors
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Order'
        - name: orderby
          description: Specify the sort field for a collection of results.
          in: query
          required: false
          schema:
            type: string
            enum:
              - id
              - email
            default: id
        - $ref: '#/components/parameters/Include'
        - $ref: '#/components/parameters/Exclude'
        - name: post
          description: Include only instructors for the specified post(s). Acceps a single `id` or a comma separated list of `ids`.
          in: query
          required: false
          schema:
            type: string
            example: '8,9,10'
        - name: post_not_in
          description: Exclude instructors for the specified post(s). Acceps a single `id` or a comma separated list of `ids`.
          in: query
          required: false
          schema:
            type: string
            example: '11,12,13'
      responses:
        '200':
          description: Successfully returned a list of instructors
          headers:
            Link:
              description: Pagination links for the collection.
              schema:
                type: string
                example: '</wp-json/llms/v1/instructors?page=1>; rel="first", </wp-json/llms/v1/instructors?page=2>; rel="prev", </wp-json/llms/v1/instructors?page=4>; rel="next", </wp-json/llms/v1/instructors?page=5>; rel="last"'
            X-WP-Total:
              $ref: '#/components/headers/PaginationTotalResults'
            X-WP-TotalPages:
              $ref: '#/components/headers/PaginationTotalPages'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Instructor'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
    post:
      summary: Create an instructor
      description: Creates a new instructor object.
      tags:
        - Instructors
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Instructor'
                - required:
                    - email
      responses:
        '201':
          description: Successfully created the instructor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instructor'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
  '/instructors/{id}':
    parameters:
      - name: id
        description: Unique Instructor Identifer. The WordPress User `ID`.
        example: 123
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceId'
    get:
      summary: Retrieve an instructor
      description: Retrieve the details of an existing instructor.
      tags:
        - Instructors
      responses:
        '200':
          description: Successfully retrieved the instructor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instructor'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
        '404':
          $ref: '#/components/responses/Error404'
    post:
      summary: Update an instructor
      description: Update the specified instructor by setting the values of the parameters passed. Any parameters not provided will be left unchanged.
      tags:
        - Instructors
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instructor'
      responses:
        '200':
          description: Successfully updated the instructor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instructor'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
        '404':
          $ref: '#/components/responses/Error404'
    delete:
      summary: Delete an instructor
      description: Delete an existing instructor.
      tags:
        - Instructors
      responses:
        '204':
          description: Successfully deleted the instructor.
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
        '404':
          $ref: '#/components/responses/Error404'
  '/instructors/{id}/content':
    parameters:
      - name: id
        description: The instructor's ID.
        example: 123
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: List an instructor's content
      description: Retrieves a list of all the instructor's LMS content.
      tags:
        - Instructors
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Order'
        - name: orderby
          description: Specify the sort field for a collection of results.
          in: query
          required: false
          schema:
            type: string
            enum:
              - id
              - email
            default: id
        - $ref: '#/components/parameters/Include'
        - $ref: '#/components/parameters/Exclude'
        - name: post
          description: Retrieve content for a specific list of one or more posts. Accepts a post `id` or comma separted list of post `id`s.
          in: query
          schema:
            type: string
            example: '123,456'
        - name: post_exclude
          description: Exclude content for a specific list of one or more posts. Accepts a post `id` or comma separted list of post `id`s.
          in: query
          schema:
            type: string
            example: '789,324'
        - $ref: '#/components/parameters/PostType'
      responses:
        '200':
          description: Successfully returned a list of the instructor's content.
          headers:
            Link:
              description: Pagination links for the collection.
              schema:
                type: string
                example: '</wp-json/llms/v1/instructors/123/content?page=1>; rel="first", </wp-json/llms/v1/instructors/123/content?page=2>; rel="prev", </wp-json/llms/v1/instructors/123/content?page=4>; rel="next", </wp-json/llms/v1/instructors/123/content?page=5>; rel="last"'
            X-WP-Total:
              $ref: '#/components/headers/PaginationTotalResults'
            X-WP-TotalPages:
              $ref: '#/components/headers/PaginationTotalPages'
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/CourseResponse'
                    - $ref: '#/components/schemas/MembershipResponse'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
  /lesson:
    get:
      summary: List lessons
      description: Retrieve a list of lessons.
      tags:
        - Lessons
      parameters:
        - $ref: '#/components/parameters/Context'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Order'
        - name: orderby
          description: Specify the sort field for a collection of results.
          in: query
          required: false
          schema:
            type: string
            enum:
              - id
              - title
              - date_created
              - date_updated
              - menu_order
            default: id
        - $ref: '#/components/parameters/Include'
        - $ref: '#/components/parameters/Exclude'
        - name: parent
          description: Filter sections by the parent post (section) ID.
          in: query
          required: false
          schemas:
            type: string
      responses:
        '200':
          description: Successfully returned a list of lessons.
          headers:
            Link:
              description: Pagination links for the collection.
              schema:
                type: string
                example: '</wp-json/llms/v1/lessons?page=1>; rel="first", </wp-json/llms/v1/lessons?page=2>; rel="prev", </wp-json/llms/v1/lessons?page=4>; rel="next", </wp-json/llms/v1/lessons?page=5>; rel="last"'
            X-WP-Total:
              $ref: '#/components/headers/PaginationTotalResults'
            X-WP-TotalPages:
              $ref: '#/components/headers/PaginationTotalPages'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LessonResponse'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
    post:
      summary: Create a lesson
      description: Create a new lesson object.
      tags:
        - Lessons
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/LessonRequest'
                - required:
                    - title
                    - content
      responses:
        '201':
          description: Successfully created the lesson.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessonResponse'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
  '/lesson/{id}':
    parameters:
      - name: id
        in: path
        description: Unique lesson Identifier. The WordPress Post `ID`.
        required: true
        schema:
          $ref: '#/components/schemas/ResourceId'
    get:
      summary: Retrieve a lesson
      description: Retrieve the details of an existing lesson.
      tags:
        - Lessons
      parameters:
        - $ref: '#/components/parameters/Context'
        - $ref: '#/components/parameters/PostPassword'
      responses:
        '200':
          description: Successfully retrieved the lesson.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessonResponse'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
        '404':
          $ref: '#/components/responses/Error404'
    post:
      summary: Update a lesson
      description: Update the specified lesson by setting the values of the parameters passed. Any parameters not provided will be left unchanged.
      tags:
        - Lessons
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LessonRequest'
      responses:
        '200':
          description: Successfully updated the lesson.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessonResponse'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
        '404':
          $ref: '#/components/responses/Error404'
    delete:
      summary: Delete a lesson
      description: Delete an existing lesson.
      tags:
        - Lessons
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                force:
                  description: Bypass the trash and force lesson deletion.
                  type: boolean
                  default: false
      responses:
        '204':
          description: Successfully deleted the lesson.
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
        '404':
          $ref: '#/components/responses/Error404'
  /memberships:
    get:
      summary: List memberships
      description: Retrieve a list of memberships.
      tags:
        - Memberships
      parameters:
        - $ref: '#/components/parameters/Context'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Order'
        - name: orderby
          description: Specify the sort field for a collection of results.
          in: query
          required: false
          schema:
            type: string
            enum:
              - id
              - title
              - date_created
              - date_updated
              - menu_order
            default: id
        - $ref: '#/components/parameters/Include'
        - $ref: '#/components/parameters/Exclude'
      responses:
        '200':
          description: Successfully returned a list of memberships.
          headers:
            Link:
              description: Pagination links for the collection.
              schema:
                type: string
                example: '</wp-json/llms/v1/memberships?page=1>; rel="first", </wp-json/llms/v1/memberships?page=2>; rel="prev", </wp-json/llms/v1/memberships?page=4>; rel="next", </wp-json/llms/v1/memberships?page=5>; rel="last"'
            X-WP-Total:
              $ref: '#/components/headers/PaginationTotalResults'
            X-WP-TotalPages:
              $ref: '#/components/headers/PaginationTotalPages'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MembershipResponse'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
    post:
      summary: Create a membership
      description: Create a new membership object.
      tags:
        - Memberships
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/MembershipRequest'
                - required:
                    - title
                    - content
      responses:
        '201':
          description: Successfully created the membership.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembershipResponse'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
  '/memberships/{id}':
    parameters:
      - name: id
        in: path
        description: Unique membership Identifier. The WordPress Post `ID`.
        required: true
        schema:
          $ref: '#/components/schemas/ResourceId'
    get:
      summary: Retrieve a membership
      description: Retrieve the details of an existing membership.
      tags:
        - Memberships
      parameters:
        - $ref: '#/components/parameters/Context'
        - $ref: '#/components/parameters/PostPassword'
      responses:
        '200':
          description: Successfully retrieved the membership.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembershipResponse'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
        '404':
          $ref: '#/components/responses/Error404'
    post:
      summary: Update a membership
      description: Update the specified membership by setting the values of the parameters passed. Any parameters not provided will be left unchanged.
      tags:
        - Memberships
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembershipRequest'
      responses:
        '200':
          description: Successfully updated the membership.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembershipResponse'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
        '404':
          $ref: '#/components/responses/Error404'
    delete:
      summary: Delete a membership
      description: Delete an existing membership.
      tags:
        - Memberships
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                force:
                  description: Bypass the trash and force membership deletion.
                  type: boolean
                  default: false
      responses:
        '204':
          description: Successfully deleted the membership.
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
        '404':
          $ref: '#/components/responses/Error404'
  /sections:
    get:
      summary: List sections
      description: Retrieve a list of sections.
      tags:
        - Sections
      parameters:
        - $ref: '#/components/parameters/Context'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Order'
        - name: orderby
          description: Specify the sort field for a collection of results.
          in: query
          required: false
          schema:
            type: string
            enum:
              - id
              - title
              - date_created
              - date_updated
              - menu_order
            default: id
        - $ref: '#/components/parameters/Include'
        - $ref: '#/components/parameters/Exclude'
        - name: parent
          description: Filter sections by the parent post (course) ID.
          in: query
          required: false
          schemas:
            type: string
      responses:
        '200':
          description: Successfully returned a list of sections.
          headers:
            Link:
              description: Pagination links for the collection.
              schema:
                type: string
                example: '</wp-json/llms/v1/sections?page=1>; rel="first", </wp-json/llms/v1/sections?page=2>; rel="prev", </wp-json/llms/v1/sections?page=4>; rel="next", </wp-json/llms/v1/sections?page=5>; rel="last"'
            X-WP-Total:
              $ref: '#/components/headers/PaginationTotalResults'
            X-WP-TotalPages:
              $ref: '#/components/headers/PaginationTotalPages'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SectionResponse'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
    post:
      summary: Create a section
      description: Create a new section object.
      tags:
        - Sections
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SectionRequest'
      responses:
        '201':
          description: Successfully created the section.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SectionResponse'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
  '/sections/{id}':
    parameters:
      - name: id
        in: path
        description: Unique Section Identifier. The WordPress Post `ID`.
        required: true
        schema:
          $ref: '#/components/schemas/ResourceId'
    get:
      summary: Retrieve a section
      description: Retrieve the details of an existing section.
      tags:
        - Sections
      parameters:
        - $ref: '#/components/parameters/Context'
      responses:
        '200':
          description: Successfully retrieved the section.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SectionResponse'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
        '404':
          $ref: '#/components/responses/Error404'
    post:
      summary: Update a section
      description: Update the specified section by setting the values of the parameters passed. Any parameters not provided will be left unchanged.
      tags:
        - Sections
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SectionRequest'
      responses:
        '200':
          description: Successfully updated the section.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SectionResponse'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
        '404':
          $ref: '#/components/responses/Error404'
    delete:
      summary: Delete a section
      description: Delete an existing section.
      tags:
        - Sections
      responses:
        '204':
          description: Successfully deleted the section.
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
        '404':
          $ref: '#/components/responses/Error404'
  '/sections/{id}/content':
    parameters:
      - name: id
        in: path
        description: Unique section Identifier. The WordPress Post `ID`.
        required: true
        schema:
          $ref: '#/components/schemas/ResourceId'
    get:
      summary: List section content
      description: Retrieve a collection of an existing section's content.
      tags:
        - Sections
      parameters:
        - $ref: '#/components/parameters/Context'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Order'
        - name: orderby
          description: Specify the sort field for a collection of results.
          in: query
          required: false
          schema:
            type: string
            enum:
              - order
              - id
              - title
            default: order
        - $ref: '#/components/parameters/Include'
        - name: parent
          description: Filter results to those belonging to the specified parent.
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            example: 987
      responses:
        '200':
          description: Successfully retrieved the section contents.
          headers:
            Link:
              description: Pagination links for the collection.
              schema:
                type: string
                example: '</wp-json/llms/v1/sections/1234/content/?page=1>; rel="first", </wp-json/llms/v1/sections/1234/content/?page=2>; rel="prev", </wp-json/llms/v1/sections/1234/content/?page=4>; rel="next", </wp-json/llms/v1/sections/1234/content/?page=5>; rel="last"'
            X-WP-Total:
              $ref: '#/components/headers/PaginationTotalResults'
            X-WP-TotalPages:
              $ref: '#/components/headers/PaginationTotalPages'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LessonResponse'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
        '404':
          $ref: '#/components/responses/Error404'
  /students:
    get:
      summary: List students
      description: Retrieves a list of all students.
      tags:
        - Students
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Order'
        - name: orderby
          description: Specify the sort field for a collection of results.
          in: query
          required: false
          schema:
            type: string
            enum:
              - id
              - email
            default: id
        - $ref: '#/components/parameters/Include'
        - $ref: '#/components/parameters/Exclude'
        - name: enrolled_in
          description: 'Retrieve only students enrolled in the specified course(s) and/or membership(s). Accepts an array of [WP_Post](https://codex.wordpress.org/Class_Reference/WP_Post) IDs.'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
        - name: enrolled_not_in
          description: 'Retrieve only students not enrolled in the specified course(s) and/or membership(s). Accepts an array of [WP_Post](https://codex.wordpress.org/Class_Reference/WP_Post) IDs.'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
      responses:
        '200':
          description: Successfully returned a list of students
          headers:
            Link:
              description: Pagination links for the collection.
              schema:
                type: string
                example: '</wp-json/llms/v1/students?page=1>; rel="first", </wp-json/llms/v1/students?page=2>; rel="prev", </wp-json/llms/v1/students?page=4>; rel="next", </wp-json/llms/v1/students?page=5>; rel="last"'
            X-WP-Total:
              $ref: '#/components/headers/PaginationTotalResults'
            X-WP-TotalPages:
              $ref: '#/components/headers/PaginationTotalPages'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
    post:
      summary: Create a student
      description: Creates a new student object.
      tags:
        - Students
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Student'
                - required:
                    - email
      responses:
        '201':
          description: Successfully created the student.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
  '/students/{id}':
    parameters:
      - name: id
        description: Unique student Identifer. The WordPress User `ID`.
        example: 123
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceId'
    get:
      summary: Retrieve a student
      description: Retrieve the details of an existing student.
      tags:
        - Students
      responses:
        '200':
          description: Successfully retrieved the student.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
        '404':
          $ref: '#/components/responses/Error404'
    post:
      summary: Update a student
      description: Update the specified student by setting the values of the parameters passed. Any parameters not provided will be left unchanged.
      tags:
        - Students
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '200':
          description: Successfully updated the student.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
        '404':
          $ref: '#/components/responses/Error404'
    delete:
      summary: Delete a student
      description: Delete an existing student.
      tags:
        - Students
      responses:
        '204':
          description: Successfully deleted the student.
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
        '404':
          $ref: '#/components/responses/Error404'
  '/students/{id}/content':
    parameters:
      - name: id
        description: Unique student Identifer. The WordPress User `ID`.
        example: 123
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceId'
    get:
      summary: List a student's content
      description: Retrieves a list of all content available to a student via enrollments.
      tags:
        - Students
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Order'
        - name: orderby
          description: Specify the sort field for a collection of results.
          in: query
          required: false
          schema:
            type: string
            enum:
              - id
              - email
            default: id
        - $ref: '#/components/parameters/Include'
        - $ref: '#/components/parameters/Exclude'
        - $ref: '#/components/parameters/EnrollmentStatus'
        - name: post
          description: Retrieve content for a specific list of one or more posts. Accepts a post `id` or comma separted list of post `id`s.
          in: query
          schema:
            type: string
            example: '123,456'
        - name: post_exclude
          description: Exclude content for a specific list of one or more posts. Accepts a post `id` or comma separted list of post `id`s.
          in: query
          schema:
            type: string
            example: '789,324'
        - $ref: '#/components/parameters/PostType'
      responses:
        '200':
          description: Successfully returned a list of the student's content.
          headers:
            Link:
              description: Pagination links for the collection.
              schema:
                type: string
                example: '</wp-json/llms/v1/students/123/content?page=1>; rel="first", </wp-json/llms/v1/students/123/content?page=2>; rel="prev", </wp-json/llms/v1/students/123/content?page=4>; rel="next", </wp-json/llms/v1/students/123/content?page=5>; rel="last"'
            X-WP-Total:
              $ref: '#/components/headers/PaginationTotalResults'
            X-WP-TotalPages:
              $ref: '#/components/headers/PaginationTotalPages'
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/CourseResponse'
                    - $ref: '#/components/schemas/MembershipResponse'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
  '/students/{id}/progress':
    parameters:
      - name: id
        description: Unique student Identifer. The WordPress User `ID`.
        example: 123
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceId'
    get:
      summary: List student progress
      description: Retrieves a list of a student's progress records.
      tags:
        - Students
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Order'
        - name: orderby
          description: Specify the sort field for a collection of results.
          in: query
          schema:
            type: string
            enum:
              - date_updated
              - date_created
              - progress
            default: date_updated
        - name: status
          description: Filter results to records matching the specified status.
          in: query
          required: false
          schema:
            type: string
            enum:
              - incomplete
              - complete
      responses:
        '200':
          description: Successfully returned a list of a student's progress records.
          headers:
            Link:
              description: Pagination links for the collection.
              schema:
                type: string
                example: '</wp-json/llms/v1/students/123/progress?page=1>; rel="first", </wp-json/llms/v1/students/123/progress?page=2>; rel="prev", </wp-json/llms/v1/students/123/progress?page=4>; rel="next", </wp-json/llms/v1/students/123/progress?page=5>; rel="last"'
            X-WP-Total:
              $ref: '#/components/headers/PaginationTotalResults'
            X-WP-TotalPages:
              $ref: '#/components/headers/PaginationTotalPages'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Progress'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
  '/students/{id}/progress/{post_id}':
    parameters:
      - name: id
        description: Unique student Identifer. The WordPress User `ID`.
        example: 123
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceId'
      - name: post_id
        description: 'Unique course, lesson, or section Identifer. The WordPress Post `ID`.'
        example: 456
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceId'
    get:
      summary: Get student progress
      description: Retrieves information about a student's progress through course content.
      tags:
        - Students
      responses:
        '200':
          description: Successfully retrieved student's progress.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Progress'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
    post:
      summary: Update student progress
      description: Update the status of a student's progress through course content.
      tags:
        - Students
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Progress'
      responses:
        '200':
          description: Successfully retrieved student's progress.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Progress'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
    delete:
      summary: Delete student progress
      description: Deletes the record of a student's progress through course content.
      tags:
        - Students
      responses:
        '204':
          description: Successfully deleted the student.
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
        '404':
          $ref: '#/components/responses/Error404'
components:
  schemas:
    AccessPlan:
      allOf:
        - type: object
          properties:
            id:
              readOnly: true
              description: Unique Access Plan Identifier. The WordPress Post `ID`.
            price:
              description: Access plan price.
              type: number
              format: float
              minimum: 0
              example: 199.97
            sku:
              description: External identifier.
              type: string
              example: LIFETIME-999-001
            frequency:
              description: Billing frequency.<br> `0` denotes a one-time payment.<br> `>= 1` denotes a recurring plan.
              type: integer
              minimum: 0
              maximum: 6
              default: 0
            length:
              description: For recurring plans only.<br> Determines the number of intervals a plan should run for.<br> `0` denotes the plan should run until cancelled.
              type: integer
              minimum: 0
              default: 0
            period:
              description: For recurring plans only.<br> Determines the interval of recurring payments.
              type: string
              enum:
                - year
                - month
                - week
                - day
              default: year
            enroll_text:
              description: Text of the "Purchase" button
              type: string
              default: Buy Now
            sale_enabled:
              description: Mark the plan as "On Sale" allowing for temporary price adjustments.
              type: boolean
              default: false
            sale_price:
              description: Sale price.
              type: number
              format: float
              minimum: 0
              example: 1
            sale_date_start:
              description: 'Used to automatically start a scheduled sale. If empty, the plan is on sale immediately.<br> Only appies when `sale_pricing` is `true`. Format: `Y-m-d H:i:s`.'
              type: string
              example: '2019-01-23 00:00:00'
            sale_date_end:
              description: 'Used to automatically end a scheduled sale. If empty, the plan remains on sale indefinitely.<br> Only appies when `sale_pricing` is `true`. Format: `Y-m-d H:i:s`.'
              type: string
              example: '2019-03-23 23:59:59'
            availability_restrictions:
              description: Restrict usage of this access plan to students enrolled in at least one of the specified memberships.
              type: array
              minimum: 1
              example:
                - 123
                - 456
                - 789
              items:
                type: integer
            access_expiration:
              description: Access expiration type.<br> `lifetime` provides access until cancelled or until a recurring payment fails.<br> `limited-period` provides access for a limited period as specified by `access_length` and `access_period` `limited-date` provides access until the date specified by `access_expires_date`
              type: string
              enum:
                - lifetime
                - limited-period
                - limited-date
              default: lifetime
            access_expires:
              description: 'Date when access expires.<br> Only applicable when $access_expiration is `limited-date`. Format: `Y-m-d H:i:s`.'
              type: string
            access_length:
              description: Determine the length of access from time of purchase.<br> Only applicable when `access_expiration` is `limited-period`.
              type: integer
              minimum: 1
              default: 1
            access_period:
              description: Determine the length of access from time of purchase.<br> Only applicable when `access_expiration` is `limited-period`.
              type: string
              enum:
                - year
                - month
                - week
                - day
              default: year
            trial_enabled:
              description: Enable a trial period for a recurring access plan.
              type: boolean
              default: false
            trial_length:
              description: Determines the length of trial access.<br> Only applicaable when `trial_enabled` is `true`.
              type: integer
              minimum: 1
              default: 1
            trial_period:
              description: Determines the length of trial access.<br> Only applicaable when `trial_enabled` is `true`.
              type: string
              enum:
                - year
                - month
                - week
                - day
              default: week
            trial_price:
              description: Determines the price of the trial period.<br> Only applicaable when `trial_enabled` is `true`.
              type: number
              format: float
              minimum: 0
              default: 0
              example: 1.99
            product_id:
              description: Determines the course or membership which can be accessed through the plan.
              type: integer
              minimum: 1
              example: 789
            redirect_type:
              description: 'Determines the redirction behavior of the user''s browser upon successful checkout or registration through the plan.<br> `self`: Redirect to the permalink of the specified `product_id`. `page`: Redirect to the permalink of the WordPress page specified by `redirect_page_id`. `url`: Redirect to the URL specified by `redirect_url`.'
              type: string
              enum:
                - self
                - page
                - url
              default: self
            redirect_page:
              description: WordPress page ID to use for checkout success redirection.<br>Applicable only when `redirect_type` is `page`.
              type: integer
              minimum: 1
            redirect_url:
              description: URL to use for checkout success redirection.<br>Applicable only when `redirect_type` is `url`.
              type: string
              example: 'https://example.tld/my/redirect'
            redirect_forced:
              description: Use this plans's redirect settings when purchasing a Membership this plan is restricted to.<br> Applicable only when `availability_restrictions` exist for the plan.
              type: boolean
              default: false
            visibility:
              description: Access plan visibility.
              type: string
              enum:
                - visible
                - hidden
                - featured
              default: visible
        - $ref: '#/components/schemas/Post'
    AccessPlanRequest:
      allOf:
        - $ref: '#/components/schemas/AccessPlan'
        - type: object
          properties:
            title:
              type: string
              description: Access plan name.
              example: Liftetime Access
            content:
              type: string
              description: Access plan short description.
              example: '\n<ul><li>Expectoque quid ad id</li><li>quod quaerebam, respondeas</li></ul>\n'
    AccessPlanResponse:
      required:
        - price
      allOf:
        - $ref: '#/components/schemas/AccessPlan'
        - type: object
          properties:
            title:
              description: Access plan name.
              type: object
              properties:
                rendered:
                  type: string
                  description: Rendered title.
                  example: Liftetime Access
                raw:
                  type: string
                  description: Raw title. Useful when displaying title in the WP Block Editor. Only returned in `edit` context.
                  example: Liftetime Access
            content:
              description: Access plan short description.
              type: object
              properties:
                rendered:
                  type: string
                  description: Rendered description.
                  example: '\n<ul><li>Expectoque quid ad id</li><li>quod quaerebam, respondeas</li></ul>\n'
                raw:
                  type: string
                  description: Raw description. Useful when displaying title in the WP Block Editor. Only returned in `edit` context.
                  example: '\n<ul><li>Expectoque quid ad id</li><li>quod quaerebam, respondeas</li></ul>\n'
            _links:
              type: object
              readOnly: true
              properties:
                self:
                  description: REST URI to the access plan.
                  type: array
                  items:
                    type: object
                    properties:
                      href:
                        type: string
                        example: /wp-json/llms/v1/access-plans/123
                collection:
                  description: REST URI to the access plan collection.
                  type: array
                  items:
                    type: object
                    properties:
                      href:
                        type: string
                        example: /wp-json/llms/v1/access-plans
                product:
                  description: REST URI to the access plan's related course or membership.
                  type: array
                  items:
                    type: object
                    properties:
                      href:
                        type: string
                        example: /wp-json/llms/v1/courses/789
                restrictions:
                  description: REST URIs to the memberships required to use the access plan.
                  type: array
                  items:
                    type: object
                    properties:
                      href:
                        type: string
                        example: '/wp-json/llms/v1/memberships?include=123,456,789'
    Address:
      type: object
      properties:
        address_1:
          description: Address line 1.
          type: string
          example: 1234 Somewhere Place
        address_2:
          description: Address line 2.
          type: string
          example: Suite ABC
        city:
          description: City name.
          type: string
          example: Anywhere
        state:
          description: 'ISO code or state, province, or district name.'
          type: string
          example: CA
        postcode:
          description: Postal code.
          type: string
          example: 12345-678
        country:
          description: ISO country code.
          type: string
          example: US
    Course:
      allOf:
        - type: object
          properties:
            id:
              readOnly: true
              description: Unique Course Identifier. The WordPress Post `ID`.
        - $ref: '#/components/schemas/PostPublic'
        - type: object
          properties:
            permalink:
              example: 'https://example.com/course/getting-started-with-lifterlms'
            post_type:
              default: course
              type: string
            catalog_visibility:
              description: Visibility of the course in catalogs and search results.
              type: string
            categories:
              description: List of course categories.
              type: array
            tags:
              description: List of course tags.
              type: array
            difficulties:
              description: List of course difficulties.
              type: array
              default: []
              example:
                - 7
              items:
                type: integer
            tracks:
              description: List of course tracks.
              type: array
              default: []
              example:
                - 8
                - 9
              items:
                type: integer
            audio_embed:
              description: URL to an oEmbed enable audio URL.
              type: string
              example: 'https://open.spotify.com/track/trackid'
            video_embed:
              description: URL to an oEmbed enable video URL.
              type: string
              example: 'https://www.youtube.com/watch?v=videoid'
            capacity_enabled:
              description: Determines if an enrollment capacity limit is enabled.
              type: boolean
              default: false
            capacity_limit:
              description: Number of students who can be enrolled in the course before enrollment closes.
              minimum: 0
              type: integer
              example: 25
            prerequisite:
              description: Course ID of the prerequisite course.
              type: integer
              example: 456
            prerequisite_track:
              description: Term ID of a the prerequisite track.
              type: integer
              example: 789
            access_opens_date:
              description: 'Date when the course opens, allowing enrolled students to begin to view and interact with the restricted course content.<br> If blank the course is open until after the `access_closes_date` has passed.<br> Does not affect course enrollment, see `enrollment_opens_date` to control the course enrollment start date.<br> Format: `Y-m-d H:i:s`.'
              type: string
              example: '2019-05-20 17:22:05'
            access_closes_date:
              description: 'Date when the course closes. After this date enrolled students may no longer view and interact with the restricted course content.<br> If blank the course is open indefinitely after the the `access_opens_date` has passed.<br> Does not affect course enrollment, see `enrollment_opens_date` to control the course enrollment close date.<br> Format: `Y-m-d H:i:s`.'
              type: string
              example: '2019-06-05 17:22:05'
            enrollment_opens_date:
              description: 'Date when the course enrollment opens.<br> If blank course enrollment is open until after the `enrollment_closes_date` has passed.<br> Does not affect course content access, see `access_opens_date` to control course access start date.<br> Format: `Y-m-d H:i:s`.'
              type: string
              example: '2019-05-15 12:15:00'
            enrollment_closes_date:
              description: 'Date when the course enrollment closes.<br> If blank course enrollment is open indefinitely after the the `enrollment_opens_date` has passed.<br> Does not affect course content access, see `access_opens_date` to control course access close date.<br> Format: `Y-m-d H:i:s`.'
              type: string
              example: '2019-10-01 23:59:59'
            video_tile:
              description: 'When `true` the `video_embed` will be used on the course tiles (on the catalog, for example) instead of the featured image.'
              type: boolean
              default: false
        - $ref: '#/components/schemas/SharedCourseMembership'
    CourseRequest:
      allOf:
        - $ref: '#/components/schemas/PostContentRequest'
        - type: object
          properties:
            access_opens_message:
              description: Message displayed to enrolled students when the course is accessed before the `access_opens_date` has passed.
              type: string
              default: 'This course opens on [lifterlms_course_info key="start_date"].'
            access_closes_message:
              description: Message displayed to enrolled students when the course is accessed after the `access_closes_date` has passed.
              type: string
              default: 'This course closed on [lifterlms_course_info key="end_date"].'
            enrollment_opens_message:
              description: Message displayed to visitors when attempting to enroll into a course before the `enrollment_opens_date` has passed.
              type: string
              default: 'Enrollment in this course opens on [lifterlms_course_info key="enrollment_start_date"].'
            enrollment_closes_message:
              description: Message displayed to visitors when attempting to enroll into a course after the `enrollment_closes_date` has passed.
              type: string
              default: 'Enrollment in this course closed on [lifterlms_course_info key="enrollment_end_date"].'
            capacity_message:
              description: Message displayed when enrollment capacity has been reached.
              type: string
              default: Enrollment has closed because the maximum number of allowed students has been reached.
            length:
              description: User defined course length.
              type: string
              example: 7 days
            restricted_message:
              description: 'Message displayed when non-enrolled visitors try to access restricted course content (lessons, quizzes, etc..) directly.'
              type: string
              default: You must enroll in this course to access course content.
        - $ref: '#/components/schemas/Course'
    CourseResponse:
      allOf:
        - $ref: '#/components/schemas/PostContentResponse'
        - type: object
          properties:
            access_opens_message:
              description: Message displayed to enrolled students when the course is accessed before the `access_opens_date` has passed.
              type: object
              properties:
                rendered:
                  description: Rendered message content.
                  type: string
                  default: 'This course opens on January, 28, 2019.'
                raw:
                  description: Raw message content.
                  type: string
                  default: 'This course opens on [lifterlms_course_info key="start_date"].'
            access_closes_message:
              description: Message displayed to enrolled students when the course is accessed after the `access_closes_date` has passed.
              type: object
              properties:
                rendered:
                  description: Rendered message content.
                  type: string
                  default: 'This course closed on March 5, 2018.'
                raw:
                  description: Raw message content.
                  type: string
                  default: 'This course closed on [lifterlms_course_info key="end_date"].'
            enrollment_opens_message:
              description: Message displayed to visitors when attempting to enroll into a course before the `enrollment_opens_date` has passed.
              type: object
              properties:
                rendered:
                  description: Rendered message content.
                  type: string
                  default: 'Enrollment in this course opens on opens on January, 28, 2019.'
                raw:
                  description: Raw message content.
                  type: string
                  default: 'Enrollment in this course opens on [lifterlms_course_info key="enrollment_start_date"].'
            enrollment_closes_message:
              description: Message displayed to visitors when attempting to enroll into a course after the `enrollment_closes_date` has passed.
              type: object
              properties:
                rendered:
                  description: Rendered message content.
                  type: string
                  default: 'Enrollment in this course closed on March 5, 2018.'
                raw:
                  description: Raw message content.
                  type: string
                  default: 'Enrollment in this course closed on [lifterlms_course_info key="enrollment_end_date"].'
            capacity_message:
              description: Message displayed when enrollment capacity has been reached.
              type: object
              properties:
                rendered:
                  description: Rendered message content.
                  type: string
                  example: Enrollment has closed because the maximum number of allowed students has been reached.
                raw:
                  description: Raw message content.
                  type: string
                  example: Enrollment has closed because the maximum number of allowed students has been reached.
            length:
              description: User defined course length.
              type: object
              properties:
                rendered:
                  description: Rendered length description.
                  type: string
                  example: 7 days
                raw:
                  description: Raw length description.
                  type: string
                  example: 7 days
            restricted_message:
              description: 'Message displayed when non-enrolled visitors try to access restricted course content (lessons, quizzes, etc..) directly.'
              type: object
              properties:
                rendered:
                  description: Rendered message content.
                  type: string
                  default: You must enroll in this course to access course content.
                raw:
                  description: Raw message content.
                  type: string
                  default: You must enroll in this course to access course content.
        - $ref: '#/components/schemas/Course'
        - type: object
          properties:
            _links:
              description: A map of links to other related API resources.
              type: object
              readOnly: true
              properties:
                self:
                  description: REST URI to the course.
                  type: array
                  items:
                    type: object
                    properties:
                      href:
                        type: string
                        example: /wp-json/llms/v1/courses/1234
                collection:
                  description: REST URI to the course collection.
                  type: array
                  items:
                    type: object
                    properties:
                      href:
                        type: string
                        example: /wp-json/llms/v1/courses
                access_plans:
                  description: REST URI to the collection of access plans for the course.
                  type: array
                  items:
                    type: object
                    properties:
                      href:
                        type: string
                        example: /wp-json/llms/v1/access-plans?product_id=1234
                content:
                  description: REST URI to the course's content collection.
                  type: array
                  items:
                    type: object
                    properties:
                      href:
                        type: string
                        example: /wp-json/llms/v1/courses/1234/content
                enrollments:
                  description: REST URI to the collection of the courses's enrollments.
                  type: array
                  items:
                    type: object
                    properties:
                      href:
                        type: string
                        example: /wp-json/llms/v1/enrollments?post=1234
                instructors:
                  description: REST URI to the collection of the course's instructors.
                  type: array
                  items:
                    type: object
                    properties:
                      href:
                        type: string
                        example: /wp-json/llms/v1/instructors?post=1234
                prerequisites:
                  description: REST URIs to course prerequisite resources.
                  type: array
                  example:
                    - type: course
                      href: /wp-json/llms/v1/courses/456
                    - type: track
                      href: /wp-json/wp/v2/course_track/789
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      href:
                        type: string
                students:
                  description: REST URI to the collection of the course's enrolled students.
                  type: array
                  items:
                    type: object
                    properties:
                      href:
                        type: string
                        example: /wp-json/llms/v1/students?enrolled_in=1234
                'wp:featured_media':
                  description: REST URI to the WordPress attachement image.
                  type: array
                  items:
                    type: object
                    properties:
                      href:
                        type: string
                        example: /wp-json/wp/v2/media/987
                'wp:term':
                  description: Collection of REST URIs to the course's taxonomy term information.
                  type: array
                  example:
                    - taxonomy: course_cat
                      href: /wp-json/wp-v2/course_cat?post=123
                    - taxonomy: course_tag
                      href: /wp-json/wp-v2/course_tag?post=123
                    - taxonomy: course_difficulty
                      href: /wp-json/wp-v2/course_difficulty?post=123
                    - taxonomy: course_track
                      href: /wp-json/wp-v2/course_track?post=123
                  items:
                    type: object
                    properties:
                      taxonomy:
                        type: string
                      href:
                        type: string
    Enrollment:
      type: object
      required:
        - id
        - student_id
        - post_id
      properties:
        id:
          allOf:
            - description: Unique enrollment Identifier.
            - example: 987
            - $ref: '#/components/schemas/ResourceId'
        student_id:
          description: The ID of the student.
          type: integer
          minimum: 1
          example: 123
        post_id:
          description: The ID of the course/membership.
          type: integer
          minimum: 1
          example: 456
        date_created:
          description: 'The enrollment creation date. Format: `Y-m-d H:i:s`'
          type: string
          example: '2019-05-21 14:22:05'
        date_updated:
          description: 'The date of the last enrollment update. Format: `Y-m-d H:i:s`'
          type: string
          example: '2019-05-21 19:22:05'
          readOnly: true
        status:
          $ref: '#/components/schemas/EnrollmentStatus'
        _links:
          readOnly: true
          type: object
          properties:
            self:
              description: REST URI to the enrollment.
              type: array
              items:
                type: object
                properties:
                  href:
                    type: string
                    example: /wp-json/llms/v1/enrollments/987
            collection:
              description: REST URI to the enrollments collection.
              type: array
              items:
                type: object
                properties:
                  href:
                    type: string
                    example: /wp-json/llms/v1/enrollments/
            post:
              description: Rest URI to the post resource.
              type: array
              items:
                type: object
                properties:
                  href:
                    type: string
                    example: /wp-json/llms/v1/courses/456
            student:
              description: Rest URI to the student resource.
              type: array
              items:
                type: object
                properties:
                  href:
                    type: string
                    example: /wp-json/llms/v1/students/123
    EnrollmentStatus:
      description: The status of the enrollment.
      type: string
      enum:
        - enrolled
        - expired
        - cancelled
        - none
      default: enrolled
    Error:
      type: object
      properties:
        code:
          description: The API error code.
        message:
          description: The API error message.
        data:
          description: Additional response data.
          type: object
          properties:
            status:
              minimum: 100
              maximum: 600
              description: The HTTP status code.
    Error400:
      allOf:
        - $ref: '#/components/schemas/Error'
        - properties:
            code:
              default: llms_rest_bad_request
              type: string
            message:
              default: Invalid or malformed request syntax.
              type: string
            data:
              properties:
                status:
                  default: 400
                  type: integer
    Error401:
      allOf:
        - $ref: '#/components/schemas/Error'
        - properties:
            code:
              default: llms_rest_unauthorized_request
              type: string
            message:
              default: The API credentials were invalid.
              type: string
            data:
              properties:
                status:
                  default: 401
                  type: integer
    Error403:
      allOf:
        - $ref: '#/components/schemas/Error'
        - properties:
            code:
              default: llms_rest_forbidden_request
              type: string
            message:
              default: You are not authorized to perform this request.
              type: string
            data:
              properties:
                status:
                  default: 403
                  type: integer
    Error404:
      allOf:
        - $ref: '#/components/schemas/Error'
        - properties:
            code:
              default: llms_rest_not_found
              type: string
            message:
              default: The requested resource could not be found.
              type: string
            data:
              properties:
                status:
                  default: 404
                  type: integer
    Instructor:
      allOf:
        - type: object
          properties:
            id:
              description: Unique Instructor Identifer. The WordPress User `ID`.
              readOnly: true
        - $ref: '#/components/schemas/User'
        - type: object
          properties:
            role:
              description: The user's WordPress user role.
              type: string
              enum:
                - lms_manager
                - instructor
                - instructors_assistant
              default: instructor
            _links:
              type: object
              readOnly: true
              properties:
                self:
                  description: REST URI to the instructor.
                  type: array
                  items:
                    type: object
                    properties:
                      href:
                        type: string
                        example: /wp-json/llms/v1/instructors/1234
                collection:
                  description: REST URI to the instructor collection.
                  type: array
                  items:
                    type: object
                    properties:
                      href:
                        type: string
                        example: /wp-json/llms/v1/instructors
                content:
                  description: REST URI to a collection of the instructor's content.
                  type: array
                  items:
                    type: object
                    properties:
                      href:
                        type: string
                        example: /wp-json/llms/v1/instructors/1234/contents
    Lesson:
      allOf:
        - type: object
          properties:
            id:
              description: Unique lesson identifier. The WordPress Post `ID`.
              readOnly: true
        - $ref: '#/components/schemas/PostPublic'
        - type: object
          properties:
            id:
              readOnly: true
              example: 789
            permalink:
              example: 'https://example.com/lesson/getting-started-with-lifterlms'
            post_type:
              default: lesson
              type: string
            audio_embed:
              description: URL to an oEmbed enable audio URL.
              type: string
              example: 'https://open.spotify.com/track/trackid'
            video_embed:
              description: URL to an oEmbed enable video URL.
              type: string
              example: 'https://www.youtube.com/watch?v=videoid'
            prerequisite:
              description: Lesson ID of the prerequisite lesson.
              type: integer
              example: 321
            public:
              description: Denotes a lesson that's publicly accessible regardless of course enrollment.
              type: boolean
              default: false
            course_id:
              description: WordPress post ID of the lesson's parent course.
              type: integer
              minimum: 1
              example: 1234
              readOnly: true
            parent_id:
              description: WordPress post ID of the parent item.<br> Must be a Section ID. `0` indicates an "orphaned" lesson which can be edited and viewed by instructors and admins but cannot be read by students.
              type: integer
              minimum: 0
              example: 987
            points:
              description: Determines the weight of the lesson when grading the course.
              type: integer
              minimum: 0
              default: 1
            order:
              description: Order of the lesson within its immediate parent.
              type: integer
              default: 1
              minimum: 1
            drip_method:
              description: |
                Determine the method with which to make the lesson content available.

                - `none`: Drip is disabled; the lesson is immediately available.
                - `date`: Lesson is made available at a specific date and time.
                - `enrollment`: Lesson is made available a specific number of days after enrollment into the course.
                - `start`: Lesson is made available a specific number of days after the course's start date. Only available on courses with a `access_opens_date`.
                - `prerequisite`: Lesson is made available a specific number of days after the `prerequisite` lesson is completed.
              type: string
              enum:
                - none
                - date
                - enrollment
                - start
                - prerequisite
              default: none
            drip_days:
              description: 'Number of days to wait before allowing access to the lesson. Applicable only when `drip_method` is `enrollment`, `start`, or `prerequisite`.'
              type: integer
              minimum: 1
              default: 1
            drip_date:
              description: 'The date and time when the lesson becomes available. Applicable only when `drip_method` is `date`. Format: `Y-m-d H:i:s`.'
              type: string
              nullable: true
              example: '2019-12-12 23:23:59'
            quiz:
              description: Associate a quiz with this lesson.
              type: object
              properties:
                enabled:
                  description: Determines if a quiz is enabled for the lesson.
                  type: boolean
                  default: false
                  example: true
                id:
                  description: The post ID of the associated quiz.
                  type: integer
                  minimum: 0
                  default: 0
                  example: 432
                progression:
                  description: |
                    Determines lesson progression requirements related to the quiz.

                    - `complete`: The quiz must be completed (with any grade) to progress the lesson.
                    - `pass`: A passing grade must be earned to progress the lesson.
                  type: string
                  enum:
                    - complete
                    - pass
                  default: complete
            assignment:
              description: |
                Associate an assignment with this lesson.

                _While assignment functionality is included with the LifterLMS Core REST API, the assignments themselves are implemented by the LifterLMS Assignments add-on._
              type: object
              properties:
                enabled:
                  description: Determines if an assignment is enabled for the lesson.
                  type: boolean
                  default: false
                  example: true
                id:
                  description: The post ID of the associated assingment.
                  type: integer
                  minimum: 0
                  default: 0
                  example: 876
                progression:
                  description: |
                    Determines lesson progression requirements related to the assignment.

                    - `complete`: The assignment must be completed (with any grade) to progress the lesson.
                    - `pass`: A passing grade must be earned to progress the lesson.
                  type: string
                  enum:
                    - complete
                    - pass
                  default: complete
    LessonRequest:
      allOf:
        - $ref: '#/components/schemas/PostContentRequest'
        - $ref: '#/components/schemas/Lesson'
    LessonResponse:
      allOf:
        - $ref: '#/components/schemas/PostContentResponse'
        - $ref: '#/components/schemas/Lesson'
        - type: object
          properties:
            _links:
              description: A map of links to other related API resources.
              type: object
              readOnly: true
              properties:
                self:
                  description: REST URI to the lesson.
                  type: array
                  items:
                    type: object
                    properties:
                      href:
                        type: string
                        example: /wp-json/llms/v1/lessons/1234
                collection:
                  description: REST URI to the lesson collection.
                  type: array
                  items:
                    type: object
                    properties:
                      href:
                        type: string
                        example: /wp-json/llms/v1/lessons
                assignment:
                  description: REST URI to the lesson's assignment.
                  type: array
                  items:
                    type: object
                    properties:
                      href:
                        type: string
                        example: /wp-json/llms/v1/assignments/876
                course:
                  description: REST URI to the lesson's parent course.
                  type: array
                  items:
                    type: object
                    properties:
                      href:
                        type: string
                        example: /wp-json/llms/v1/courses/1234
                prerequisite:
                  description: REST URIs to lesson prerequisite resources.
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                        example: lesson
                      href:
                        type: string
                        example: /wp-json/llms/v1/lessons/321
                parent:
                  description: REST URI to the lessons's parent.
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                        example: course
                      href:
                        type: string
                        example: /wp-json/llms/v1/sections/987
                quiz:
                  description: REST URI to the lesson's quiz.
                  type: array
                  items:
                    type: object
                    properties:
                      href:
                        type: string
                        example: /wp-json/llms/v1/quizzes/432
                siblings:
                  description: REST URI to the collection of the lessons's siblings within its parent.
                  type: array
                  items:
                    type: object
                    properties:
                      href:
                        type: string
                        example: /wp-json/llms/v1/lessons?parent=987
                'wp:featured_media':
                  description: REST URI to the WordPress attachement image.
                  type: array
                  items:
                    type: object
                    properties:
                      href:
                        type: string
                        example: /wp-json/wp/v2/media/987
    Membership:
      allOf:
        - type: object
          properties:
            id:
              readOnly: true
              description: Unique membership identifier. The WordPress Post `ID`.
        - $ref: '#/components/schemas/PostPublic'
        - type: object
          properties:
            permalink:
              example: 'https://example.com/membership/getting-started-with-lifterlms'
            post_type:
              default: membership
              type: string
            categories:
              description: List of membership categories.
              type: array
            tags:
              description: List of membership tags.
              type: array
            restriction_action:
              description: |
                Determines the action to take when content restricted by the membership is accessed by a non-member.<br>
                `none`: Remain on page and display the message `restriction_message`.
                `membership`: Redirect to the membership's permalink.
                `page`: Redirect to the permalink of the page identified by `restriction_page_id`.
                `custom`: Redirct to the URL identified by `restriction_url`.
              type: string
              enum:
                - none
                - membership
                - page
                - custom
              default: none
            restriction_page_id:
              description: WordPress page ID used for redirecting non-members when `restriction_action` is `page`.
              type: integer
              minimum: 1
              example: 456
            restriction_url:
              description: URL used for redirecting non-members when `restriction_action` is `custom`.
              type: string
              example: 'https://example.tld/my-custom-url'
            auto_enroll:
              description: List of courses to automatically enroll students into when they're enrolled into the membership.
              type: array
              default: []
              example:
                - 456
                - 789
              items:
                type: integer
        - $ref: '#/components/schemas/SharedCourseMembership'
    MembershipRequest:
      allOf:
        - $ref: '#/components/schemas/PostContentRequest'
        - type: object
          properties:
            restriction_message:
              description: Message to display to non-members after a `restriction_action` redirct. When `restriction_action` is `none` replaces the page content with this message.
              type: string
              default: 'You must belong to the [lifterlms_membership_link id="1234"] membership to access this content.'
        - $ref: '#/components/schemas/Membership'
    MembershipResponse:
      allOf:
        - $ref: '#/components/schemas/PostContentResponse'
        - $ref: '#/components/schemas/Membership'
        - type: object
          properties:
            restriction_message:
              description: Message to display to non-members after a `restriction_action` redirct. When `restriction_action` is `none` replaces the page content with this message.
              type: object
              properties:
                rendered:
                  description: Rendered message content.
                  type: string
                  default: You must belong to the <a href="https//example.com/membership/gold">Gold</a> membership to access this content.
                raw:
                  description: Raw message content.
                  type: string
                  default: 'You must belong to the [lifterlms_membership_link id="1234"] membership to access this content.'
        - type: object
          properties:
            _links:
              description: A map of links to other related API resources.
              type: object
              readOnly: true
              properties:
                self:
                  description: REST URI to the membership.
                  type: array
                  items:
                    type: object
                    properties:
                      href:
                        type: string
                        example: /wp-json/llms/v1/memberships/1234
                collection:
                  description: REST URI to the membership collection.
                  type: array
                  items:
                    type: object
                    properties:
                      href:
                        type: string
                        example: /wp-json/llms/v1/memberships
                access_plans:
                  description: REST URI to the collection of access plans for the membership.
                  type: array
                  items:
                    type: object
                    properties:
                      href:
                        type: string
                        example: /wp-json/llms/v1/access-plans?product_id=1234
                auto_enrollment_courses:
                  description: REST URI to the collection of automatic enrollment courses for the membership.
                  type: array
                  items:
                    type: object
                    properties:
                      href:
                        type: string
                        example: '/wp-json/llms/v1/courses?include=456,789'
                enrollments:
                  description: REST URI to the collection of the memberships's enrollments.
                  type: array
                  items:
                    type: object
                    properties:
                      href:
                        type: string
                        example: /wp-json/llms/v1/enrollments?post=1234
                instructors:
                  description: REST URI to the collection of the membership's instructors.
                  type: array
                  items:
                    type: object
                    properties:
                      href:
                        type: string
                        example: /wp-json/llms/v1/instructors?post=1234
                students:
                  description: REST URI to the collection of the membership's enrolled students.
                  type: array
                  items:
                    type: object
                    properties:
                      href:
                        type: string
                        example: /wp-json/llms/v1/students?enrolled_in=1234
                'wp:featured_media':
                  description: REST URI to the WordPress attachement image.
                  type: array
                  items:
                    type: object
                    properties:
                      href:
                        type: string
                        example: /wp-json/wp/v2/media/987
                'wp:term':
                  description: Collection of REST URIs to the membership's taxonomy term information.
                  type: array
                  example:
                    - taxonomy: membership_cat
                      href: /wp-json/wp-v2/membership_cat?post=123
                    - taxonomy: membership_tag
                      href: /wp-json/wp-v2/membership_tag?post=123
                    - taxonomy: membership_difficulty
                      href: /wp-json/wp-v2/membership_difficulty?post=123
                    - taxonomy: membership_track
                      href: /wp-json/wp-v2/membership_track?post=123
                  items:
                    type: object
                    properties:
                      taxonomy:
                        type: string
                      href:
                        type: string
    Post:
      description: Reduced WordPress Post object properties shared by LifterLMS custom post types
      type: object
      required:
        - id
      properties:
        id:
          allOf:
            - description: Unique Post Identifier. The WordPress Post `ID`.
            - $ref: '#/components/schemas/ResourceId'
        date_created:
          description: 'Creation date. Format: `Y-m-d H:i:s`.'
          type: string
          example: '2019-05-20 17:22:05'
        date_created_gmt:
          description: 'Creation date (in GMT). Format: `Y-m-d H:i:s`.'
          type: string
          example: '2019-05-20 13:22:05'
        date_updated:
          description: 'Date last modified. Format: `Y-m-d H:i:s`.'
          type: string
          example: '2019-05-20 17:25:05'
          readOnly: true
        date_updated_gmt:
          description: 'Date last modified (in GMT). Format: `Y-m-d H:i:s`.'
          type: string
          example: '2019-05-20 13:25:05'
          readOnly: true
        menu_order:
          description: Custom post sort order.
          type: integer
          default: 0
          minimum: 0
    PostContentRequest:
      description: Post content request fields.
      type: object
      properties:
        title:
          type: string
          description: Raw title.
          example: Getting Started with LifterLMS
        content:
          type: string
          description: Raw post content.
          example: '<!-- wp:heading -->\n<h2>Lorem ipsum dolor sit amet.</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Expectoque quid ad id, quod quaerebam, respondeas. Nec enim, omnes avaritias si aeque avaritias esse dixerimus, sequetur ut etiam aequas esse dicamus.</p>\n<!-- /wp:paragraph -->'
        excerpt:
          type: string
          description: Raw excerpt content.
          example: 'Expectoque quid ad id, quod quaerebam, respondeas. Nec enim, omnes avaritias si aeque avaritias esse dixerimus, sequetur ut etiam aequas esse dicamus.'
    PostContentResponse:
      description: Post content fields.
      type: object
      properties:
        title:
          description: Post title.
          type: object
          properties:
            rendered:
              type: string
              description: Rendered title.
              example: Getting Started with LifterLMS
            raw:
              type: string
              description: Raw title. Useful when displaying title in the WP Block Editor. Only returned in `edit` context.
              example: Getting Started with LifterLMS
        content:
          description: Post content.
          type: object
          properties:
            rendered:
              type: string
              description: Rendered post content.
              example: '\n<h2>Lorem ipsum dolor sit amet.</h2>\n\n\n\n<p>Expectoque quid ad id, quod quaerebam, respondeas. Nec enim, omnes avaritias si aeque avaritias esse dixerimus, sequetur ut etiam aequas esse dicamus.</p>\n'
            raw:
              type: string
              description: Raw post content. Useful when displaying title in the WP Block Editor. Only returned in `edit` context.
              example: '<!-- wp:heading -->\n<h2>Lorem ipsum dolor sit amet.</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Expectoque quid ad id, quod quaerebam, respondeas. Nec enim, omnes avaritias si aeque avaritias esse dixerimus, sequetur ut etiam aequas esse dicamus.</p>\n<!-- /wp:paragraph -->'
        excerpt:
          description: Post excerpt.
          type: object
          properties:
            rendered:
              type: string
              description: Rendered HTML content.
              example: '<p>Expectoque quid ad id, quod quaerebam, respondeas. Nec enim, omnes avaritias si aeque avaritias esse dixerimus, sequetur ut etiam aequas esse dicamus.</p>'
            raw:
              type: string
              description: Raw HTML content. Useful when displaying title in the WP Block Editor. Only returned in `edit` context.
              example: 'Expectoque quid ad id, quod quaerebam, respondeas. Nec enim, omnes avaritias si aeque avaritias esse dixerimus, sequetur ut etiam aequas esse dicamus.'
    PostPublic:
      description: Reduced WordPress Post object properties shared by LifterLMS custom post types
      allOf:
        - $ref: '#/components/schemas/Post'
        - type: object
          properties:
            slug:
              description: Post URL slug.
              type: string
              example: getting-started-with-lifterlms
            permalink:
              description: Post URL.
              type: string
              example: 'https://example.com/post/getting-started-with-lifterlms'
              readOnly: true
            post_type:
              allOf:
                - $ref: '#/components/schemas/PostType'
                - readOnly: true
            status:
              $ref: '#/components/schemas/PostStatus'
            password:
              description: Password used to protect access to the content.<br>Readable only in `edit` context.
              type: string
              example: p4$sW0rd
            featured_media:
              description: Featured image ID.
              type: integer
              example: 987
            comment_status:
              description: Post comment status. Default comment status dependent upon general WordPress post discussion settings.
              type: string
              enum:
                - open
                - closed
              default: open
            ping_status:
              description: Post ping status. Default ping status dependent upon general WordPress post discussion settings.
              type: string
              enum:
                - open
                - closed
              default: open
    PostStatus:
      description: The publication status of the course.
      type: string
      enum:
        - publish
        - pending
        - draft
        - auto-draft
        - future
        - private
        - trash
      default: publish
    PostType:
      description: LifterLMS custom post types available for enrollments
      type: string
      enum:
        - course
        - llms_membership
        - section
      default: course
    Progress:
      type: object
      required:
        - status
      properties:
        student_id:
          description: The ID of the student.
          type: integer
          minimum: 1
          example: 123
          readOnly: true
        post_id:
          description: 'The ID of the course, section, or lesson.'
          type: integer
          minimum: 1
          example: 456
          readOnly: true
        date_created:
          description: 'The progress creation date. Format: `Y-m-d H:i:s`'
          type: string
          example: '2019-05-21 14:22:05'
        date_updated:
          description: 'The date of the last progress update. Format: `Y-m-d H:i:s`'
          type: string
          example: '2019-05-21 19:22:05'
          readOnly: true
        progress:
          description: Student's progress as a percentage.
          type: number
          format: float
          minimum: 0
          maximum: 100
          default: 0
          example: 89.83
          readOnly: true
        status:
          description: Student progress status.
          type: string
          enum:
            - incomplete
            - complete
          default: incomplete
          example: complete
        trigger:
          description: Determines what triggered the progress event.
          type: object
          properties:
            type:
              description: Describes the type of trigger which created the progress event.
              type: string
              enum:
                - lesson
                - quiz
                - assignment
                - admin
                - unspecified
              default: unspecified
              example: lesson
            related_id:
              description: A resource ID for the related post or user which triggered the progress event.
              type: integer
              nullable: true
              minimum: 1
              default: null
              example: 789
        _links:
          readOnly: true
          type: object
          properties:
            self:
              description: REST URI to the progress.
              type: array
              items:
                type: object
                properties:
                  href:
                    type: string
                    example: /wp-json/llms/v1/students/123/progress/456
            collection:
              description: REST URI to the collection of student progress records.
              type: array
              items:
                type: object
                properties:
                  href:
                    type: string
                    example: /wp-json/llms/v1/students/123/progress
            post:
              description: Rest URI to the post resource.
              type: array
              items:
                type: object
                properties:
                  href:
                    type: string
                    example: /wp-json/llms/v1/courses/456
            student:
              description: Rest URI to the student resource.
              type: array
              items:
                type: object
                properties:
                  href:
                    type: string
                    example: /wp-json/llms/v1/students/123
    ResourceId:
      description: Unique Resource Identifier.
      type: integer
      minimum: 1
      example: 123
      readOnly: true
    Section:
      type: object
      properties:
        id:
          allOf:
            - description: Unique section identifier. The WordPress Post `ID`.
              readOnly: true
            - $ref: '#/components/schemas/ResourceId'
            - example: 987
        date_created:
          description: 'Creation date. Format: `Y-m-d H:i:s`.'
          type: string
          example: '2019-05-20 17:22:05'
        date_created_gmt:
          description: 'Creation date (in GMT). Format: `Y-m-d H:i:s`.'
          type: string
          example: '2019-05-20 13:22:05'
        date_updated:
          description: 'Date last modified. Format: `Y-m-d H:i:s`.'
          type: string
          example: '2019-05-20 17:25:05'
          readOnly: true
        date_updated_gmt:
          description: 'Date last modified (in GMT). Format: `Y-m-d H:i:s`.'
          type: string
          example: '2019-05-20 13:25:05'
          readOnly: true
        order:
          description: Order of the section within the course.
          type: integer
          default: 1
          minimum: 1
        parent_id:
          description: WordPress post ID of the parent item.<br> Must be a Course ID.
          type: integer
          minimum: 1
          example: 1234
        post_type:
          allOf:
            - $ref: '#/components/schemas/PostType'
            - type: string
              default: section
              readOnly: true
    SectionRequest:
      allOf:
        - type: object
          required:
            - title
            - order
            - parent_id
          properties:
            title:
              type: string
              description: Raw title.
              example: Getting Started with LifterLMS
        - $ref: '#/components/schemas/Section'
    SectionResponse:
      allOf:
        - $ref: '#/components/schemas/Section'
        - type: object
          properties:
            title:
              description: Section Title
              type: object
              properties:
                rendered:
                  description: Rendered title.
                  type: string
                  example: Introduction
                raw:
                  description: Raw title.
                  type: string
                  example: Introduction
            _links:
              description: A map of links to other related API resources.
              type: object
              readOnly: true
              properties:
                self:
                  description: REST URI to the section.
                  type: array
                  items:
                    type: object
                    properties:
                      href:
                        type: string
                        example: /wp-json/llms/v1/sections/1234
                collection:
                  description: REST URI to the section collection.
                  type: array
                  items:
                    type: object
                    properties:
                      href:
                        type: string
                        example: /wp-json/llms/v1/sections
                content:
                  description: REST URI to the section's child content.
                  type: array
                  items:
                    type: object
                    properties:
                      href:
                        type: string
                        example: /wp-json/llms/v1/sections/1234/content?parent=987
                parent:
                  description: REST URI to the section's parent.
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                        example: course
                      href:
                        type: string
                        example: /wp-json/llms/v1/courses/1234
                siblings:
                  description: REST URI to the collection of the section's siblings within its parent.
                  type: array
                  items:
                    type: object
                    properties:
                      href:
                        type: string
                        example: /wp-json/llms/v1/sections?parent=1234
    SharedCourseMembership:
      description: Properties shared by courses and memberships.
      type: object
      properties:
        catalog_visibility:
          description: Visibility of the post in catalogs and search results.
          type: string
          enum:
            - catalog_search
            - catalog
            - search
            - hidden
          default: catalog_search
        categories:
          description: List of post categories.
          type: array
          default: []
          example:
            - 1
            - 2
            - 3
          items:
            type: integer
        tags:
          description: List of post tags.
          type: array
          default: []
          example:
            - 4
            - 5
            - 6
          items:
            type: integer
        instructors:
          description: List of post instructors. Defaults to current user when creating a new post.
          type: array
          default: []
          example:
            - 1
            - 2
            - 3
          minItems: 1
          items:
            type: integer
        sales_page_type:
          description: Defines alternate content displayed to visitors and non-enrolled students when accessing the post.<br> - `none` displays the post content.<br> - `content` displays alternate content from the `excerpt` property.<br> - `page` redirects to the WordPress page defined in `content_page_id`.<br> - `url` redirects to the URL defined in `content_page_url`.
          type: string
          enum:
            - none
            - content
            - page
            - url
          default: none
        sales_page_page_id:
          description: The WordPress page ID of the sales page.<br> Required when `sales_page_type` equals `page`.<br> Only returned when the `sales_page_type` equals `page`.
          type: integer
          example: 543
        sales_page_url:
          description: The URL of the sales page content.<br> Required when `sales_page_type` equals `url`.<br> Only returned when the `sales_page_type` equals `url`.
          type: string
          example: 'https://example.tld/custom-sales-page'
    Student:
      allOf:
        - type: object
          properties:
            id:
              description: Unique Student Identifer. The WordPress User `ID`.
              readOnly: true
        - $ref: '#/components/schemas/User'
        - type: object
          properties:
            role:
              description: The user's WordPress user role.
              type: string
              enum:
                - student
              default: student
              readOnly: true
            _links:
              type: object
              readOnly: true
              properties:
                self:
                  description: REST URI to the student.
                  type: array
                  items:
                    type: object
                    properties:
                      href:
                        type: string
                        example: /wp-json/llms/v1/students/456
                collection:
                  description: REST URI to the student collection.
                  type: array
                  items:
                    type: object
                    properties:
                      href:
                        type: string
                        example: /wp-json/llms/v1/students
                content:
                  description: REST URI to a collection of the student's content.
                  type: array
                  items:
                    type: object
                    properties:
                      href:
                        type: string
                        example: /wp-json/llms/v1/students/456/contents
                enrollments:
                  description: REST URI to a collection of the student's enrollments.
                  type: array
                  items:
                    type: object
                    properties:
                      href:
                        type: string
                        example: /wp-json/llms/v1/enrollments?student=456
    User:
      description: Reduced WordPress User object properties shared by LifterLMS custom user types
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/ResourceId'
            - description: Unique User Identifer. The WordPress User `ID`.
              example: 456
        email:
          description: The user's email address.
          type: string
          example: jamie@lifterlms.com
        username:
          description: The user's username.
          type: string
          example: jamie2019
        password:
          description: The user's password.
          type: string
          example: my_l337-p@$5w0rd!
          writeOnly: true
        name:
          $ref: '#/components/schemas/UserName'
        billing_address:
          $ref: '#/components/schemas/Address'
    UserName:
      type: object
      properties:
        first:
          description: The person's first name.
          type: string
          example: Jamie
        last:
          description: The person's last name.
          type: string
          example: Cook
        display:
          description: The person's public display name.
          type: string
          example: Jamie Cook
    Webhook:
      type: object
      properties:
        id:
          allOf:
            - description: Unique webhook Identifier. The WordPress post `ID`.
            - example: 654
            - $ref: '#/components/schemas/ResourceId'
        name:
          description: 'A friendly, human-readable name for the webhook.'
          type: string
          minimum: 1
          example: 123
        status:
          description: |
            The status of the webhook.

            + `active`: Payload will be delivered
            + `paused`: Delivery is disabled by an admin.
            + `disabled`: Delivery is disabled because of delivery failure.
          type: string
          enum:
            - active
            - paused
            - disabled
          default: active
        topic:
          description: The Webhook topic.
        resource:
          description: The Webhook resource.
        date_created:
          description: 'Creation date. Format: `Y-m-d H:i:s`.'
          type: string
          example: '2019-05-20 17:22:05'
          readOnly: true
        date_created_gmt:
          description: 'Creation date (in GMT). Format: `Y-m-d H:i:s`.'
          type: string
          example: '2019-05-20 13:22:05'
          readOnly: true
        date_updated:
          description: 'Date last modified. Format: `Y-m-d H:i:s`.'
          type: string
          example: '2019-05-20 17:25:05'
          readOnly: true
        date_updated_gmt:
          description: 'Date last modified (in GMT). Format: `Y-m-d H:i:s`.'
          type: string
          example: '2019-05-20 13:25:05'
          readOnly: true
        _links:
          readOnly: true
          type: object
          properties:
            self:
              description: REST URI to the enrollment.
              type: array
              items:
                type: object
                properties:
                  href:
                    type: string
                    example: /wp-json/llms/v1/enrollments/987
            collection:
              description: REST URI to the enrollments collection.
              type: array
              items:
                type: object
                properties:
                  href:
                    type: string
                    example: /wp-json/llms/v1/enrollments/
            post:
              description: Rest URI to the post resource.
              type: array
              items:
                type: object
                properties:
                  href:
                    type: string
                    example: /wp-json/llms/v1/courses/456
            student:
              description: Rest URI to the student resource.
              type: array
              items:
                type: object
                properties:
                  href:
                    type: string
                    example: /wp-json/llms/v1/students/123
  responses:
    Error400:
      x-summary: Bad request.
      description: Invalid or malformed request syntax.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error400'
    Error401:
      x-summary: Unauthorized.
      description: Invalid API Credentials.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error401'
    Error403:
      x-summary: Forbidden.
      description: The client does not have access to perform the requested action.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error403'
    Error404:
      x-summary: Not Found.
      description: The requested resource could not be located.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error404'
  parameters:
    Context:
      name: context
      in: query
      description: Specify the scope under which the request is made. `edit` should be used when requesting content to be modified; `view` should be used when requesting content to be displayed.
      required: false
      schema:
        type: string
        enum:
          - view
          - edit
        default: view
    EnrollmentStatus:
      name: enrollment_status
      in: query
      description: Limit results by enrollment status.
      required: false
      schema:
        $ref: '#/components/schemas/EnrollmentStatus'
    Exclude:
      name: exclude
      in: query
      description: Exclude a list of `id`s from results. Accepts a single `id` or a comma separated list of `id`s.
      schema:
        type: string
        example: '10,11,12'
    Include:
      name: include
      in: query
      description: Limit results to a list of `id`s. Accepts a single `id` or a comma separated list of `id`s.
      schema:
        type: string
        example: '1,2,3'
    Order:
      name: order
      in: query
      description: Specifcy the sort order for a collection of results.
      required: false
      schema:
        type: string
        enum:
          - asc
          - desc
        default: asc
    Page:
      name: page
      in: query
      description: Specify the page number for a paginated collection.
      required: false
      schema:
        type: integer
        minimum: 1
        default: 1
    PerPage:
      name: per_page
      in: query
      description: Specify the number of results per paginated collection page.
      required: false
      schema:
        type: integer
        minimum: 1
        default: 10
    PostPassword:
      name: password
      in: query
      description: Post password. Required if the post is password protected.
      required: false
      schema:
        type: string
        example: p4$sW0rd
    PostType:
      name: post_type
      in: query
      description: Filter results to those of a specific `post_type`.
      required: false
      schema:
        $ref: '#/components/schemas/PostType'
  headers:
    PaginationTotalPages:
      description: Total number of pages available in the collection.
      schema:
        type: integer
        example: 28
    PaginationTotalResults:
      description: Total number of results found in the collection.
      schema:
        type: integer
        example: 275
  securitySchemes:
    Basic-Authentication:
      type: http
      scheme: basic
