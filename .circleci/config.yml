version: 2
references:

  common_env_vars: &common_env_vars
    environment:
      - MYSQL_ROOT_HOST: "%"

  common: &common
    working_directory: ~/repo
    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "composer.json" }}
          - v1-dependencies-

      - run:
          name: Install Composer Dependencies
          command: composer install -n --prefer-dist

      - save_cache:
          paths:
            - ./vendor
          key: v1-dependencies-{{ checksum "composer.json" }}

      - run:
          name: Check Coding Standards
          command: composer run-script check-cs-errors

      - run:
          name: Install PHP Unit Tests
          command: composer run-script tests-install

      - run:
          name: Run PHP Unit Tests
          command: |
            if [ "test-php-73" == "${CIRCLE_JOB}" ]; then
                /cc-test-reporter before-build
                export COMPOSER_PROCESS_TIMEOUT=1200
                composer run-script tests-run -- --coverage-clover clover.xml
                /cc-test-reporter after-build --coverage-input-type clover --exit-code $?
            else
              composer run-script tests-run
            fi

jobs:
  test-php-71:
    docker:
      - image: thomasplevy/llms-testing-env:php71
        <<: [ *common_env_vars ]
    <<: [ *common ]

  test-php-72:
    docker:
      - image: thomasplevy/llms-testing-env:php72
        <<: [ *common_env_vars ]
    <<: [ *common ]

  test-php-73:
    docker:
      - image: thomasplevy/llms-testing-env:php73
        <<: [ *common_env_vars ]
    <<: [ *common ]

  test-openapi-spec:
    docker:
      - image: circleci/node:lts
    working_directory: ~/repo
    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # - v1-dependencies-

      - run:
          name: Update npm
          command: 'sudo npm install -g npm@latest'

      - run:
          name: Install Dependencies
          command: npm install

      - run:
          name: Run Tests
          command: npm run test

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - persist_to_workspace:
          root: ~/repo
          paths: .

  deploy-gh-pages:
    docker:
      - image: circleci/node:lts
    working_directory: ~/repo
    steps:
      - add_ssh_keys:
          fingerprints:
            - "77:bf:34:73:f8:80:cd:45:26:e0:49:d1:e0:5a:3b:9f"
      - attach_workspace:
          at: ~/repo
      - run:
          name: Setup known_hosts
          command: ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: Build Docs
          command: npm run build
      - run:
          name: Deploy docs
          command: |
            if [[ -z $(git status -s) ]]; then
              echo "No changes to deploy"
            else
              git config user.email "circleci@lifterlms.com"
              git config user.name "CircleCI Deployment"
              git add -A
              git commit -m "Deploy docs [ci-skip]"
              git push origin master
              npm run gh-pages
            fi

workflows:
  version: 2
  test-and-deploy:
    jobs:
      - test-php-71:
          filters:
            branches:
              only: /.*/
      - test-php-72:
          filters:
            branches:
              only: /.*/
      - test-php-73:
          filters:
            branches:
              only: /.*/
      - test-openapi-spec:
          filters:
            branches:
              only: /.*/
      - deploy-gh-pages:
          requires:
            - test-openapi-spec
          filters:
            branches:
              only:
                - master
